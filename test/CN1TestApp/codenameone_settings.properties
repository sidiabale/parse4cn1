#
#Sun Sep 11 08:50:48 IDT 2016
codename1.ios.appid=75WC6SX6UU.com.parse4cn1.TestApp
codename1.ios.release.provision=D\:\\Workspace\\projects\\parse4cn1\\test\\CN1TestApp\\resources\\ParsePush_IOS_DISTRIBUTION_Profile.mobileprovision
codename1.arg.rim.obfuscation=false
codename1.j2me.nativeTheme=nbproject/nativej2me.res
codename1.arg.ios.project_type=ios
codename1.arg.ios.interface_orientation=UIInterfaceOrientationPortrait\:UIInterfaceOrientationPortraitUpsideDown\:UIInterfaceOrientationLandscapeLeft\:UIInterfaceOrientationLandscapeRight
codename1.displayName=parse4cn1TestApp
guiResource=theme.res
codename1.android.keystoreAlias=
codename1.arg.android.xapplication=<service android\:name\="com.parse.PushService" /> <receiver android\:name\="com.parse.ParseBroadcastReceiver">   <intent-filter>     <action android\:name\="android.intent.action.BOOT_COMPLETED" />     <action android\:name\="android.intent.action.USER_PRESENT" />   </intent-filter> </receiver> <receiver android\:name\="com.parse.CN1ParsePushBroadcastReceiver"     android\:exported\="false">   <intent-filter>     <action android\:name\="com.parse.push.intent.RECEIVE" />     <action android\:name\="com.parse.push.intent.DELETE" />     <action android\:name\="com.parse.push.intent.OPEN" />     </intent-filter> </receiver> <receiver android\:name\="com.parse.GcmBroadcastReceiver"     android\:permission\="com.google.android.c2dm.permission.SEND">   <intent-filter>     <action android\:name\="com.google.android.c2dm.intent.RECEIVE" />     <action android\:name\="com.google.android.c2dm.intent.REGISTRATION" />     <category android\:name\="com.parse4cn1.TestApp" />   </intent-filter> </receiver>
codename1.ios.release.certificate=D\:\\Workspace\\projects\\parse4cn1\\test\\CN1TestApp\\resources\\CN1_distribution.p12
codename1.android.keystorePassword=
codename1.ios.provision=
codename1.arg.ios.dsym=false
codename1.arg.android.release=true
codename1.arg.ios.glAppDelegateHeader=\#import "Parse.h" \n \#import "com_parse4cn1_nativeinterface_Utils.h"
package=generated
codename1.arg.ios.statusbar_hidden=false
codename1.arg.ios.afterFinishLaunching=[Parse setApplicationId\:@"j1KMuH9otZlHcPncU9dZ1JFH7cXL8K5XUiQQ9ot8" clientKey\:@"V6ZUyBtfERtzbq6vjeAb13tiFYij980HN9nQTWGB"]; UIUserNotificationType userNotificationTypes \= (UIUserNotificationTypeAlert | UIUserNotificationTypeBadge | UIUserNotificationTypeSound); UIUserNotificationSettings *settings \= [UIUserNotificationSettings settingsForTypes\:userNotificationTypes categories\:nil]; [application registerUserNotificationSettings\:settings]; [application registerForRemoteNotifications]; if (application.applicationState \!\= UIApplicationStateBackground) { BOOL preBackgroundPush \= \![application respondsToSelector\:@selector(backgroundRefreshStatus)]; BOOL oldPushHandlerOnly \= \![self respondsToSelector\:@selector(application\:didReceiveRemoteNotification\:fetchCompletionHandler\:)]; BOOL noPushPayload \= \![launchOptions objectForKey\:UIApplicationLaunchOptionsRemoteNotificationKey]; if (preBackgroundPush || oldPushHandlerOnly || noPushPayload) { [PFAnalytics trackAppOpenedWithLaunchOptions\:launchOptions]; } NSString *msg; NSDictionary *notificationPayload \= launchOptions[UIApplicationLaunchOptionsRemoteNotificationKey]; if (notificationPayload && preBackgroundPush && oldPushHandlerOnly) { msg \= @"didFinishLaunchingWithOptions()\: App opened via remote notification. Payload\="; NSString *json \= [com_parse4cn1_nativeinterface_Utils dictToJson\:notificationPayload]; msg \= [msg stringByAppendingString\:json]; [com_parse4cn1_nativeinterface_Utils handleAppOpenedViaPush\:notificationPayload]; } else{ msg \= @"didFinishLaunchingWithOptions()\: App opened normally"; } [com_parse4cn1_nativeinterface_Utils logDebugPlusStateInfo\:msg]; }
codename1.languageLevel=5
codename1.android.keystore=
mainForm=Main
codename1.vendor=CodenameOne
codename1.arg.win.ver=8
codename1.ios.certificatePassword=
codename1.arg.zooz.sandbox=false
codename1.ios.debug.certificatePassword=password
codename1.mainName=Main
codename1.ios.release.certificatePassword=password
codename1.arg.ios.prerendered_icon=false
codename1.arg.vserv.scaleMode=false
codename1.ios.debug.certificate=D\:\\Workspace\\projects\\parse4cn1\\test\\CN1TestApp\\resources\\CN1_development.p12
libVersion=127
codename1.arg.android.xapplication_attr=android\:name\="com.parse4cn1.nativeinterface.CN1AndroidApplication"
codename1.arg.android.xpermissions= <uses-permission android\:name\="android.permission.ACCESS_NETWORK_STATE" /> <uses-permission android\:name\="android.permission.WAKE_LOCK" /> <uses-permission android\:name\="android.permission.VIBRATE" /> <uses-permission android\:name\="android.permission.RECEIVE_BOOT_COMPLETED" /> <uses-permission android\:name\="android.permission.GET_ACCOUNTS" /> <uses-permission android\:name\="com.google.android.c2dm.permission.RECEIVE" /> <permission android\:protectionLevel\="signature"     android\:name\="com.parse4cn1.TestApp.permission.C2D_MESSAGE" /> <uses-permission android\:name\="com.parse4cn1.TestApp.permission.C2D_MESSAGE" />
codename1.arg.ios.application_exits=false
codename1.description=
codename1.secondaryTitle=parse4cn1TestApp
codename1.ios.debug.provision=D\:\\Workspace\\projects\\parse4cn1\\test\\CN1TestApp\\resources\\ParsePush_IOS_DEVELOPMENT_Profile.mobileprovision
baseClass=src/generated/StateMachineBase.java
codename1.arg.build.incSources=1
codename1.arg.j2me.nativeThemeConst=0
codename1.rim.certificatePassword=
codename1.version=1.0
codename1.ios.certificate=
codename1.arg.ios.glAppDelegateBody=- (void)application\:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken\:(NSData *)deviceToken {   PFInstallation *currentInstallation \= [PFInstallation currentInstallation];    currentInstallation.deviceToken \= @"";   [currentInstallation setDeviceTokenFromData\:deviceToken];   [currentInstallation saveInBackgroundWithBlock\:^(BOOL succeeded, NSError *error) {     if (succeeded) {           [com_parse4cn1_nativeinterface_Utils logDebugPlusStateInfo\:@"didRegisterForRemoteNotificationsWithDeviceToken()\: Installation saved in background"];           [com_parse4cn1_nativeinterface_Utils notifyPushRegistrationSuccess];         }         if (error) {       [com_parse4cn1_nativeinterface_Utils notifySaveInstallationFailure\:error.localizedDescription];     }   }]; } - (void)application\:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError\:(NSError *)error {     [com_parse4cn1_nativeinterface_Utils handlePushRegistrationError\:error.localizedDescription];    } - (void)application\:(UIApplication *)application didReceiveRemoteNotification\:(NSDictionary *)userInfo {     if (application.applicationState \=\= UIApplicationStateInactive) {       [PFAnalytics trackAppOpenedWithRemoteNotificationPayload\:userInfo];     }         NSString *msg \= @"didReceiveRemoteNotification()\: userInfo\=";     NSString *json \= [com_parse4cn1_nativeinterface_Utils dictToJson\:userInfo];     msg \= [msg stringByAppendingString\:json];     [com_parse4cn1_nativeinterface_Utils logDebugPlusStateInfo\:msg];         if (\![com_parse4cn1_nativeinterface_Utils handlePushReceived\:userInfo]) {       [PFPush handlePush\:userInfo];     } }  - (void)application\:(UIApplication *)application didReceiveRemoteNotification\:(NSDictionary *)userInfo fetchCompletionHandler\:(void (^)(UIBackgroundFetchResult))completionHandler {   if (application.applicationState \=\= UIApplicationStateInactive) {     [PFAnalytics trackAppOpenedWithRemoteNotificationPayload\:userInfo];   }    NSString *msg \= @"didReceiveRemoteNotification_fetchCompletionHandler()\: userInfo\=";   NSString *json \= [com_parse4cn1_nativeinterface_Utils dictToJson\:userInfo];   msg \= [msg stringByAppendingString\:json];   [com_parse4cn1_nativeinterface_Utils logDebugPlusStateInfo\:msg];      if (\![com_parse4cn1_nativeinterface_Utils handlePushReceived\:userInfo]) {     [PFPush handlePush\:userInfo];   }     completionHandler(UIBackgroundFetchResultNoData); } 
codename1.icon=icon.png
codename1.rim.signtoolCsk=
codename1.arg.ios.plistInject=<key>UIBackgroundModes</key> <array>     <string>remote-notification</string> </array>
codename1.arg.android.debug=false
codename1.rim.signtoolDb=
codename1.arg.vserv.transition=20000
userClass=src/userclasses/StateMachine.java
codename1.packageName=com.parse4cn1.TestApp
codename1.arg.ios.includePush=false
codename1.arg.ios.testFlight=false
